{"version":3,"sources":["redux/category.js","components/Header.js","redux/imageModal.js","components/PhotoItem.js","components/PhotoList.js","api/photos.js","redux/photos.js","redux/selector/selectFilteredPhotos.js","containers/PhotoListContainer.js","components/Modal.js","utils/getAverageColorOfImage.js","components/ImageModal.js","containers/ImageModalContainer.js","App.js","redux/index.js","index.js"],"names":["setCategory","category","type","categoryReducer","createSlice","name","initialState","reducers","extraReducers","SET_CATEGORY","state","action","reducer","HeaderWrap","styled","header","Nav","nav","NavList","ul","NavItem","li","active","Header","dispatch","useDispatch","useSelector","onClick","imageModalReducer","modalVisible","bgColor","r","g","b","src","alt","SHOW_MODAL","HIDE_MODAL","SET_BG_COLOR","ImageWrap","div","Image","img","PhotoItem","photo","urls","offset","small","Date","getTime","showModal","full","PhotoListWrap","PhotoList","photos","map","i","a","axios","get","data","fetchPhotos","createAsyncThunk","photosReducer","loading","error","pending","fulfilled","payload","rejected","createSelector","filter","PhotoListContainer","useEffect","selectFilteredPhotos","ModalWrap","ModalContent","CloseButton","button","Modal","closeModal","children","cache","FullImage","ImageModal","crossOrigin","onLoad","e","averageColor","imgElement","hasOwnProperty","canvas","document","createElement","context","getContext","width","naturalWidth","offsetWidth","height","naturalHeight","offsetHeight","drawImage","imageData","getImageData","length","count","getAverageColorOfImage","target","setBgColor","ImageModalContainer","imageModal","shallowEqual","defaults","baseURL","AppWrap","GlobalStyle","createGlobalStyle","App","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f1425e26.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n/** Actions **/\nexport const SET_CATEGORY = 'SET_CATEGORY';\n\nexport const setCategory = category => ({ type: SET_CATEGORY, category });\n\n/** Reducer **/\nconst { reducer: categoryReducer } = createSlice({\n  name: 'category',\n  initialState: {\n    category: 'all', // 'random', 'animals', 'food', 'fashion', 'travel'\n  },\n  reducers: {},\n  extraReducers: {\n    SET_CATEGORY: (state, action) => {\n      state.category = action.category;\n    },\n  },\n});\n\nexport default categoryReducer;\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { setCategory } from \"../redux/category\"\n\nfunction Header() {\n  const dispatch = useDispatch()\n  const category = useSelector((state) => state.category.category)\n\n  return (\n    <HeaderWrap>\n      <Nav>\n        <NavList>\n          <NavItem\n            active={category === \"all\"}\n            onClick={() => {\n              dispatch(setCategory(\"all\"))\n            }}\n          >\n            <span>All</span>\n          </NavItem>\n          <NavItem\n            active={category === \"random\"}\n            onClick={() => {\n              dispatch(setCategory(\"random\"))\n            }}\n          >\n            <span>Random</span>\n          </NavItem>\n          <NavItem\n            active={category === \"animals\"}\n            onClick={() => {\n              dispatch(setCategory(\"animals\"))\n            }}\n          >\n            <span>Animals</span>\n          </NavItem>\n          <NavItem\n            active={category === \"food\"}\n            onClick={() => {\n              dispatch(setCategory(\"food\"))\n            }}\n          >\n            <span>Food</span>\n          </NavItem>\n          <NavItem\n            active={category === \"fashion\"}\n            onClick={() => {\n              dispatch(setCategory(\"fashion\"))\n            }}\n          >\n            <span>Fashion</span>\n          </NavItem>\n          <NavItem\n            active={category === \"travel\"}\n            onClick={() => {\n              dispatch(setCategory(\"travel\"))\n            }}\n          >\n            <span>Travel</span>\n          </NavItem>\n        </NavList>\n      </Nav>\n    </HeaderWrap>\n  )\n}\n\nconst HeaderWrap = styled.header`\n  border-bottom: 1px solid #666;\n`\n\nconst Nav = styled.nav`\n  height: 64px;\n`\nconst NavList = styled.ul`\n  display: flex;\n  height: 64px;\n  align-items: center;\n  justify-content: center;\n`\nconst NavItem = styled.li`\n  span {\n    padding: 0 2rem;\n    font-size: 1.5em;\n    font-weight: 700;\n    color: ${({ active }) => (active ? \"#fff\" : \"#999\")};\n    cursor: pointer;\n  }\n\n  span:hover {\n    color: #fff;\n  }\n`\n\nexport default Header\n","import { createSlice } from '@reduxjs/toolkit';\n\n/** Actions **/\nexport const SHOW_MODAL = 'SHOW_MODAL';\nexport const HIDE_MODAL = 'HIDE_MODAL';\nexport const SET_BG_COLOR = 'SET_BG_COLOR';\n\nexport const showModal = ({ src, alt }) => ({\n  type: SHOW_MODAL,\n  src,\n  alt,\n});\nexport const hideModal = () => ({ type: HIDE_MODAL });\nexport const setBgColor = bgColor => ({ type: SET_BG_COLOR, bgColor });\n\n/** Reducer **/\nconst { reducer: imageModalReducer } = createSlice({\n  name: 'imageModal',\n  initialState: {\n    modalVisible: false,\n    bgColor: { r: 0, g: 0, b: 0 },\n    src: '',\n    alt: '',\n  },\n  reducers: {},\n  extraReducers: {\n    SHOW_MODAL: (state, action) => {\n      state.modalVisible = true;\n      state.src = action.src;\n      state.alt = action.alt;\n      state.bgColor = { r: 0, g: 0, b: 0 };\n    },\n    HIDE_MODAL: state => {\n      state.modalVisible = false;\n    },\n    SET_BG_COLOR: (state, action) => {\n      state.bgColor = action.bgColor;\n    },\n  },\n});\n\nexport default imageModalReducer;\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { useDispatch } from \"react-redux\"\nimport LazyLoad from \"react-lazyload\"\nimport { showModal } from \"../redux/imageModal\"\n\nfunction PhotoItem({ photo: { urls, alt } }) {\n  const dispatch = useDispatch()\n\n  const openModal = () => {\n    dispatch(showModal({ src: urls.full, alt }))\n  }\n\n  return (\n    <ImageWrap>\n      <LazyLoad offset={500}>\n        <Image src={urls.small + \"&t=\" + new Date().getTime()} alt={alt} onClick={openModal} />\n      </LazyLoad>\n    </ImageWrap>\n  )\n}\n\nconst ImageWrap = styled.div`\n  width: 100%;\n  padding-bottom: 56.25%;\n  position: relative;\n`\n\nconst Image = styled.img`\n  cursor: pointer;\n  width: 100%;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n`\n\nexport default PhotoItem\n","import React from 'react';\nimport PhotoItem from './PhotoItem';\nimport styled from 'styled-components';\n\nfunction PhotoList({ photos }) {\n  return (\n    <PhotoListWrap>\n      {photos.map((photo, i) => {\n        return <PhotoItem key={i} photo={photo} />;\n      })}\n    </PhotoListWrap>\n  );\n}\n\nconst PhotoListWrap = styled.div`\n  margin: 20px auto;\n  width: 70%;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 10px;\n`;\n\nexport default PhotoList;\n","import axios from 'axios';\n\nexport async function fetchPhotos() {\n  const url = '/photos';\n  const { data } = await axios.get(url);\n\n  return data;\n}\n","import * as photosApi from '../api/photos';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\n/** Actions **/\nexport const FETCH_PHOTOS = 'FETCH_PHOTOS';\n\nexport const fetchPhotos = createAsyncThunk(\n  FETCH_PHOTOS,\n  photosApi.fetchPhotos\n);\n\n/** Reducer **/\nconst { reducer: photosReducer } = createSlice({\n  name: 'photos',\n  initialState: {\n    loading: 'init',\n    data: [],\n    error: null,\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchPhotos.pending]: (state, action) => {\n      state.loading = 'pending';\n    },\n    [fetchPhotos.fulfilled]: (state, action) => {\n      if (state.loading === 'pending') {\n        state.loading = 'done';\n        state.data = action.payload;\n      }\n    },\n    [fetchPhotos.rejected]: (state, action) => {\n      if (state.loading === 'pending') {\n        state.loading = 'rejected';\n        state.error = action.error;\n      }\n    },\n  },\n});\n\nexport default photosReducer;\n","import { createSelector } from \"reselect\"\n\nexport default createSelector([(state) => state.photos.data, (state) => state.category.category], (photos, category) =>\n  category === \"all\" ? photos : photos.filter((photo) => photo.category === category)\n)\n","import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport PhotoList from \"../components/PhotoList\"\nimport { fetchPhotos } from \"../redux/photos\"\nimport selectFilteredPhotos from \"../redux/selector/selectFilteredPhotos\"\n\nfunction PhotoListContainer() {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPhotos())\n  }, [dispatch])\n\n  const photos = useSelector(selectFilteredPhotos)\n  const loading = useSelector((state) => state.photos.loading)\n\n  if (loading === \"error\") {\n    return <span>Error!</span>\n  }\n\n  if (loading !== \"done\") {\n    return <span>loading...</span>\n  }\n\n  return <PhotoList photos={photos} />\n}\n\nexport default PhotoListContainer\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Modal = ({ modalVisible, closeModal, bgColor, children }) => {\n  return (\n    <>\n      {modalVisible ? (\n        <>\n          <ModalWrap bgColor={bgColor}>\n            <ModalContent>\n              <CloseButton onClick={closeModal}>Close</CloseButton>\n              <div>{children}</div>\n            </ModalContent>\n          </ModalWrap>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nconst ModalWrap = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: ${({ bgColor }) =>\n    `rgba(${bgColor.r}, ${bgColor.g}, ${bgColor.b}, 0.8)`};\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);\n  z-index: 999;\n  * {\n    margin-left: 16px;\n    margin-right: 16px;\n  }\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  text-align: center;\n  height: 100%;\n`;\n\nconst CloseButton = styled.button`\n  cursor: pointer;\n  position: fixed;\n  border: none;\n  top: 20px;\n  right: 20px;\n  color: #fff;\n  font-size: 28px;\n  background-color: transparent;\n`;\n\nexport default Modal;\n","const cache = {}\n\nexport function getAverageColorOfImage(imgElement) {\n  if (cache.hasOwnProperty(imgElement.src)) {\n    return cache[imgElement.src]\n  }\n\n  const canvas = document.createElement(\"canvas\")\n  const context = canvas.getContext && canvas.getContext(\"2d\")\n  const averageColor = {\n    r: 0,\n    g: 0,\n    b: 0,\n  }\n\n  if (!context) {\n    return averageColor\n  }\n\n  const width = (canvas.width = imgElement.naturalWidth || imgElement.offsetWidth || imgElement.width)\n  const height = (canvas.height = imgElement.naturalHeight || imgElement.offsetHeight || imgElement.height)\n\n  context.drawImage(imgElement, 0, 0)\n\n  const imageData = context.getImageData(0, 0, width, height).data\n  const length = imageData.length\n\n  for (let i = 0; i < length; i += 4) {\n    averageColor.r += imageData[i]\n    averageColor.g += imageData[i + 1]\n    averageColor.b += imageData[i + 2]\n  }\n\n  const count = length / 4\n  averageColor.r = ~~(averageColor.r / count) // ~~ => convert to int\n  averageColor.g = ~~(averageColor.g / count)\n  averageColor.b = ~~(averageColor.b / count)\n\n  cache[imgElement.src] = averageColor\n\n  return averageColor\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Modal from './Modal';\nimport { useDispatch } from 'react-redux';\nimport { hideModal, setBgColor } from '../redux/imageModal';\nimport { getAverageColorOfImage } from '../utils/getAverageColorOfImage';\n\nfunction ImageModal({ modalVisible, src, alt, bgColor }) {\n  const dispatch = useDispatch();\n  const onLoadImage = e => {\n    const averageColor = getAverageColorOfImage(e.target);\n    dispatch(setBgColor(averageColor));\n  };\n\n  const closeModal = () => {\n    dispatch(hideModal());\n  };\n\n  return (\n    <Modal\n      modalVisible={modalVisible}\n      closeModal={closeModal}\n      bgColor={bgColor}\n    >\n      <ImageWrap>\n        <FullImage crossOrigin=\"*\" src={src} alt={alt} onLoad={onLoadImage} />\n      </ImageWrap>\n    </Modal>\n  );\n}\n\nconst ImageWrap = styled.div`\n  width: 100%;\n  height: 100%;\n`;\nconst FullImage = styled.img`\n  max-width: 100vw;\n  max-height: 75vh;\n  box-shadow: 0px 0px 16px 4px rgba(0, 0, 0, 0.3);\n`;\n\nexport default ImageModal;\n","import React from \"react\"\nimport { useSelector, shallowEqual } from \"react-redux\"\nimport ImageModal from \"../components/ImageModal\"\n\nfunction ImageModalContainer() {\n  const { modalVisible, bgColor, src, alt } = useSelector(\n    (state) => ({\n      modalVisible: state.imageModal.modalVisible,\n      bgColor: state.imageModal.bgColor,\n      src: state.imageModal.src,\n      alt: state.imageModal.alt,\n    }),\n    shallowEqual // 각 데이터가 달라졌는지 하나하나 확인해주는 equality Func\n  )\n  return <ImageModal modalVisible={modalVisible} bgColor={bgColor} src={src} alt={alt} />\n}\n\nexport default ImageModalContainer\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport PhotoListContainer from './containers/PhotoListContainer';\nimport ImageModalContainer from './containers/ImageModalContainer';\n\naxios.defaults.baseURL = 'http://localhost:3001';\n\nfunction App() {\n  return (\n    <AppWrap>\n      <GlobalStyle />\n      <Header />\n      <PhotoListContainer />\n      <ImageModalContainer />\n    </AppWrap>\n  );\n}\n\nconst AppWrap = styled.div`\n  margin: 0 auto;\n`;\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  html, body {\n    font-size: 16px;\n    background-color: #000;\n  }\n\n  ul, li, ol {\n    list-style: none;\n  }\n\n  a, a:visited, a:active, a:hover {\n    color: initial;\n  }\n`;\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport photosReducer from './photos';\nimport categoryReducer from './category';\nimport imageModalReducer from './imageModal';\n\nconst rootReducer = combineReducers({\n  photos: photosReducer,\n  category: categoryReducer,\n  imageModal: imageModalReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport rootReducer from './redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(ReduxThunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}